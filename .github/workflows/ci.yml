name: Continuous Integration
on:
  push:
    branches: [main]
  pull_request:

env:
  IMAGE_NAME: backend

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --no-audit --no-progress
      - name: Code Linting
        run: npm run lint
  test:
    name: Test
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - name: Code Linting
        run: npm run lint
      - name: Migrate database
        run: npx prisma migrate dev
      - name: Seed database
        run: npx prisma db seed
      - name: Test
        run: npm test
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --no-audit --no-progress
      - name: Build
        run: npm run build
